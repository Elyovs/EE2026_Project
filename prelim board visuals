`timescale 1ns / 1ps



//preliminary board visualisation created using pixels with no pieces yet. it's white and brown




module board_visualisation (  
    input CLOCK, btnC, btnU,
    input [3:0] SW,
    output [7:0] JC,
    inout PS2Clk, inout PS2Data
    );    
    
    
    
    wire fb, sp, samp;    
    reg [15:0] oled_data = 16'b00000_000000_00000;    
    wire [12:0] pix_index;
    wire [7:0] x;
    wire [6:0] y;
    
    
    
   
    Oled_Display oled_data_A (
        .clk(clk_6p25),         
        .reset(0), 
        .frame_begin(fb),         
        .sending_pixels(sp),
        .sample_pixel(samp),         
        .pixel_index(pix_index), 
        .pixel_data(oled_data),         
        .cs(JC[0]), 
        .sdin(JC[1]), 
        .sclk(JC[3]),         
        .d_cn(JC[4]), 
        .resn(JC[5]),         
        .vccen(JC[6]),
        .pmoden(JC[7])    );
        
        
    assign x = pix_index%96;
    assign y = pix_index/96;
    
    
        
    always @ (posedge CLOCK)
    begin
    
        
         if (x > 16 && x < 81 && 
            (((y <= 7) || (y >= 16 && y < 24) || (y >= 32 && y <40) || (y >= 48 && y < 56)) && 
            ((x >= 16 && x < 24) || (x >= 32 && x < 40) || (x >= 48 && x < 56) || (x >= 64 && x < 72))) ||
            (((y >= 8 && y < 16) || (y >= 24 && y < 32) || ( y >= 40 && y < 48) || (y >= 56)) &&
            ((x >= 24 && x < 32) || ( x >= 40 && x < 48) || (x >= 56 && x < 64) || (x >= 72 && x < 80))) )       
         begin
            oled_data <= 16'b11111_111111_11111;
         end
         
          else if (x <= 16 || x > 80)
          begin
            oled_data <= 16'b00000_000000_00000;
          end
                

         else begin
            oled_data <= 16'b10010_010011_00010;
         end
         
    end
            
           

endmodule    
